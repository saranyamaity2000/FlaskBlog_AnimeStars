from datetime import datetime
from flask import Flask, render_template, url_for, flash, redirect
from forms import RegistrationForm, LoginForm
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)

app.config['SECRET_KEY'] = '54869a0a55f9b9b8dbd8915596bbf36b'
'''
   the secret key is generated by 
   >>> import secrets 
   >>> secrets.token_hex(16)
   // now a 16 byte code will be generated randomly  
'''
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///site.db'  # 3 forward slash '/' to specify relative path
db = SQLAlchemy(app)  # now we have SQLite database instance


class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(20), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)
    image_file = db.Column(db.String(20), nullable=False, default='default.jpg')
    password = db.Column(db.String(60), nullable=False)

    posts = db.relationship('Post', backref='author', lazy=True)
    # P is capital in Post as here we are referencing the 'Post' class
    # its a relationship to Post model
    # backref is similar to adding another column to post model with relationship
    # lazy = True means SQLAlchemy will load the data from database in one go considering necessary

    def __repr__(self):  # its a magic method
        return f"User('{self.username}', '{self.email}', '{self.image_file}')"


class Post(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    date_posted = db.Column(db.DateTime, nullable=True, default=datetime.utcnow)
    content = db.Column(db.Text, nullable=False)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    #                               here we have used lower case u and i in 'user.id' because
    # here we are referencing user table.column in database , and in database everything is
    # stored in lowercase

    def __repr__(self):
        return f"User('{self.title}', '{self.date_posted}')"


posts = [
    {
        'author': 'Saranya Maity',
        'title': 'How to Excel in Competitive Programming',
        'content': 'Go to my Github profile github.com/saranyamaity2000',
        'date': 'Aug 9, 2021'
    },
    {
        'author': 'Swagato Bag',
        'title': 'Placed in HRC!',
        'content': 'I am very glad to say, after a lot work experience finally placed in HRC',
        'date': 'Aug 15, 2021'
    }
]


@app.route("/")  # these are decorators
@app.route("/home")
def home():
    return render_template('home.html', posts=posts)


@app.route("/about")
def about():
    return render_template('about.html', title='about')


@app.route("/register", methods=['GET', 'POST'])  # Get request and POST request
def register():
    form = RegistrationForm()
    if form.validate_on_submit():
        flash(f'Account Created for {form.username.data}!', 'success')  # we have used f string for ease
        return redirect(url_for('home'))
    return render_template('register.html', title='Register', form=form)


@app.route("/login", methods=['GET', 'POST'])
def login():
    form = LoginForm()
    if form.validate_on_submit():
        if form.email.data == 'admin@blog.com' and form.password.data == 'password':
            flash('You have been logged in!', 'success')
            return redirect(url_for('home'))
        else:
            flash('Log in Unsuccessful! Kindly check your Email and Password.', 'danger')
    return render_template('login.html', title='Login', form=form)


# most of the time we will be using
# export FLASK_APP='main.py'
# flask run
if __name__ == '__main__':  # useful when we use direct run
    app.run(debug=True)
